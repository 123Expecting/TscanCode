<?xml version="1.0" encoding="utf-8" ?>
<def format="1">
  <section name="CodeTrace" value="1">
  </section>
  <section name="Autofilter" value="0">
  </section>
  <section name="PathToIgnore">
	<!---path name="F:\TSC2\trunk\quarkzou\np_demo\np_demo\demo"></path-->
  </section>
  <section name="JumpCode">
	<!--jumpcode name="JMP"></jumpcode-->
	<jumpcode name="assert" >
		<arg index="1"></arg>
	</jumpcode>
  </section>
  <section name="Checks">
	  <id name="nullpointer" rule_name="空指针错误" value="1">
		  <subid name="dereferenceAfterCheck"			value="1" severity="Serious" rule_name="先判空后解引用" desc="指针先判空，然后在判空作用域外解引用，因为指针判空暗示当前上下文该指针可能为空，因此建议对没有在判空作用域的指针添加判空保护" />
		  <subid name="funcRetNull"						value="1" severity="Warning" rule_name="函数返回值未判空解引用" desc="函数存在返回NULL的分支，所以返回值可能为空，应该先判空再使用" />
		  <subid name="funcRetNullStatistic"			value="1" severity="Serious" rule_name="基于统计推断函数返回值未判空" desc="通过分析代码调用模式，如果调用func函数，有10处对返回值进行了判空，而只有1处没有判空，那么很有可能是漏掉了判空。"/>
		  <subid name="dereferenceBeforeCheck"			value="1" severity="Serious" rule_name="先解引用后判空" desc="指针先解引用然后才判空，因为指针判空暗示当前上下文该指针可能为空，因此建议对没有在判空作用域的指针添加判空保护" />
		  <subid name="dereferenceIfNull"				value="1" severity="Critical" rule_name="指针为空解应用" desc="if条件判断指针等于NULL成立时对指针解引用，通常是判空条件写反了导致的" />
		  <subid name="explicitNullDereference"			value="1" severity="Critical" rule_name="显式空指针解应用" desc="存在一条代码执行路径，使得空指针直接解引用" />
		  <subid name="checkNullDefect"					value="1" severity="Critical" rule_name="判空条件缺陷" desc="if表达式判空缺陷，通常是||和&amp;&amp;写反了" />
		  <subid name="invalidDereferenceIterator"		value="1" severity="Serious" rule_name="无效枚举器解引用" desc="枚举器可能指向容器的end()位置，此时解引用会导致程序错误" />
	  </id>
	  <id name="bufoverrun" rule_name="越界错误" value="1">
		  <subid name="arrayIndexOutOfBounds"			value="1" severity="Critical" rule_name="数组下标越界" desc="数组下标可能产生越界访问，请检查数组下标的最大取值是否超过了数组长度" />
		  <subid name="negativeIndex"					value="1" severity="Serious" rule_name="负数下标" desc="负数下标作为数组下标，通常是不合理的" />
		  <subid name="arrayIndexThenCheck"				value="1" severity="Critical" rule_name="先访问数组后校验下标范围" desc="比如 array[i] &amp;&amp; i &lt; length这种场景， 应该先检查下标再使用" />
		  <subid name="arrayIndexCheckDefect"			value="1" severity="Critical" rule_name="数组下标校验缺陷" desc="对数组下标的保护存在缺陷，通常是漏掉了数组长度的边界值" />
		  <subid name="bufferAccessOutOfBounds"			value="1" severity="Serious" rule_name="数据缓冲区越界" desc="访问缓冲区越界，读写缓冲区的长度超过了缓冲区本身的大小" />
		  <subid name="funcRetLengthAsIndex"			value="1" severity="Serious" rule_name="read函数返回值作为数组下标" desc="read函数的返回值最大可能为缓冲区大小，如果直接把返回值作为数组下标使用，可能造成越界" />
		  <subid name="stlOutOfBounds"					value="1" severity="Serious" rule_name="stl库函数越界" desc="stl库函数导致的越界" />
	  </id>
	  <id name="memleak" rule_name="资源泄漏错误" value="1">
		  <subid name="memleak"							value="1" severity="Warning" rule_name="内存泄漏" desc="申请的内存没有释放或者存在代码执行路径导致没有释放" />
		  <subid name="memleakOnRealloc"				value="1" severity="Warning" rule_name="realloc内存泄漏" desc="realloc函数可能会分配一块新的内存空间，如果此时有其他的指针指向旧的内存空间就会导致问题" />
		  <subid name="resourceLeak"					value="1" severity="Warning" rule_name="资源泄漏" desc="文件、管道等资源的泄漏" />
		  <subid name="deallocDealloc"					value="1" severity="Warning" rule_name="重复dealloc" desc="重复dealloc会导致程序错误" />
		  <subid name="deallocuse"						value="1" severity="Warning" rule_name="dealloc后解引用" desc="dealloc指针后再解引用" />
		  <subid name="mismatchAllocDealloc"			value="1" severity="Warning" rule_name="内存申请和释放不匹配" desc="内存申请和释放的方式不匹配，比如new的内存，用free去释放" />
		  <subid name="mismatchSize"					value="1" severity="Warning" rule_name="内存分配大小错误" desc="alloc的大小和类型的大小不匹配" />
		  <subid name="virtualDestructor"				value="1" severity="Warning" rule_name="虚析构函数使用错误" desc="析构函数没有设置为virtual，如果漏调用可能产生资源泄漏" />
	  </id>
	  <id name="compute" rule_name="运算错误" value="1">
		  <subid name="incrementboolean"				value="1" severity="Warning" rule_name="bool变量自增" desc="对bool变量使用自增，不符合代码规范，而且可能造成不可预期的错误" />
		  <subid name="moduloAlwaysTrueFalse"			value="1" severity="Warning" rule_name="取模运算结果错误判断" desc="比如if(a % 10 == 10)这种场景，a对10取模的最大值只能是9" />
		  <subid name="SizeofForNumericParameter"		value="1" severity="Warning" rule_name="数字常量使用sizeof" desc="对一个数字常量使用sizeof，比如sizeof(10)，不推荐这种写法" />
		  <subid name="SizeofForArrayParameter"			value="1" severity="Warning" rule_name="数组参数使用sizeof" desc="数组作为函数参数时避免对数组用sizeof计算，因为数组参数本质上是指针，可能得到预期之外的结果" />
		  <subid name="SizeofForPointerSize"			value="1" severity="Warning" rule_name="指针变量使用sizeof" desc="在指针类型上调用sizeof，可能是不符预期的，请确认sizeof的是指针还是指针指向的缓存" />
		  <subid name="sizeofsizeof"					value="1" severity="Warning" rule_name="嵌套sizeof" desc="sizeof一个sizeof的结果，这种写法意义不大" />
		  <subid name="PreciseComparison"				value="1" severity="Information" rule_name="浮点数判等" desc="因为浮点数的精度问题，浮点数用作==,!=运算可能得到预期之外的结果" />
		  <subid name="Unsignedlessthanzero"			value="1" severity="Information" rule_name="无符号数判断小于0" desc="无符号数在判断的时候，判断其值小于0，判定结果恒为false" />
		  <subid name="UnsignedDivision"				value="1" severity="Warning" rule_name="有符号数和无符号数进行除法运算" desc="有符号数和无符号数相除，结果可能不符合预期" />
		  <subid name="NegativeBitwiseShift"			value="1" severity="Warning" rule_name="位操作数为负" desc="对负数进行位移运算，不符合编码规范" />
		  <subid name="ZeroDivision"					value="1" severity="Serious" rule_name="除零错误" desc="可能的除零错误，除零会导致程序crash" />
	  </id>
	  <id name="suspicious" rule_name="可疑错误" value="1">
		  <subid name="assignmentInAssert"				value="1" severity="Information" rule_name="断言中变量赋值" desc="在断言中对变量进行赋值，比如assert(a=5)，在release模式下，assert里面的语言不会被执行" />
		  <subid name="autovar"							value="1" severity="Warning" rule_name="返回局部变量地址" desc="返回一个局部变量的地址，在函数返回后，栈上的地址可能会失效" />
		  <subid name="suspiciousSemicolon"				value="1" severity="Information" rule_name="可疑的分号使用" desc="可疑的分号使用，比如if(xxx);{}，这种情况分号很有可能是多余的" />
		  <subid name="memsetZeroBytes"					value="1" severity="Serious" rule_name="memset参数使用错误" desc="memset函数第二、三个参数写反了，比如memset(buffer,100,0);" />
		  <subid name="Danglingpointer"					value="1" severity="Warning" rule_name="野指针" desc="delete之后没有将指针赋值为NULL，成为野指针，容易出问题" />
		  <subid name="NestedLoop"						value="1" severity="Warning" rule_name="嵌套循环" desc="多重循环中，使用相同的变量名称来控制循环" />
		  <subid name="suspiciousArrayIndex"			value="1" severity="Serious" rule_name="数组下标使用错误" desc="使用了数组长度作为数组下标来访问数组" />
		  <subid name="unConditionalBreakinLoop"		value="1" severity="Warning" rule_name="无条件break" desc="看循环中没有任何条件的break，导致循环只执行一次" />
		  <subid name="SuspiciousPriority"				value="1" severity="Information" rule_name="可疑优先级" desc="可疑的优先级，&amp;&amp;的优先级高于||(+优先级高于&lt;&lt;)" />
		  <subid name="suspiciousfor"					value="1" severity="Serious" rule_name="可疑的for循环" desc="可能存在错误的for循环, 比如for(int i;i&lt;count;i--)" />
		  <subid name="wrongvarinfor"					value="1" severity="Serious" rule_name="for循环变量错误" desc="在for循环中变量使用错误，比如判定的是i&lt;count，自增的是j++" />
		  <subid name="FuncReturn"						value="1" severity="Information" rule_name="函数返回值未处理" desc="函数定义存在返回值，但没有使用函数返回值" />
		  <subid name="BoolFuncReturn"					value="1" severity="Information" rule_name="未返回bool变量" desc="bool返回类型的函数返回的是非bool类型的值" />
		  <subid name="IfCondition"						value="1" severity="Warning" rule_name="if条件赋值" desc="将赋值语句放在if条件中，本意可能是判等==" />
		  <subid name="invalidIterator"					value="1" severity="Serious" rule_name="迭代器使用错误" desc="用list1的迭代器去操作list2容器" />
		  <subid name="strPlusChar"  					value="1" severity="Warning" rule_name="字符串加字符变量" desc="字符串加字符，字符被默认被转成整形，然后进行的是字符串偏移的操作，而不是字符串拼接" />
	  </id>
	  <id name="logic" rule_name="逻辑错误" value="1">
		  <subid name="bitwiseOnBoolean"				value="1" severity="Warning" rule_name="bool进行位运算" desc="将布尔的结果用在了位运算中, 某些环境下，bool值可能不是0或1，运算结果将不可控" />
		  <subid name="ComparisonOfBoolWithInt"			value="1" severity="Warning" rule_name="bool和int比较" desc="使用布尔类型与int类型的值进行比较,很可能出现了异常代码" />
		  <subid name="ComparisonOfBoolWithBool"		value="1" severity="Warning" rule_name="bool和bool比较运算" desc="避免在bool类型变量间的使用大于小于比较符" />
		  <subid name="ComparisonWithBool"				value="1" severity="Warning" rule_name="bool变量比较运算" desc="bool表达式进行比较运算，应该避免这种非常规的运算" />
		  <subid name="assignIf"						value="1" severity="Warning" rule_name="无效的if表达式" desc="不恰当的运算导致if条件总是为真或假" />
		  <subid name="oppositeInnerCondition"			value="1" severity="Warning" rule_name="相反或相同的if条件" desc="检查if条件中含有相反或相同的内部条件" />
		  <subid name="incorrectLogicOperator"			value="1" severity="Warning" rule_name="错误的逻辑运算操作" desc="错误的逻辑运算导致结果总是真或者假" />
		  <subid name="clarifyCondition"				value="1" severity="Warning" rule_name="运算符优先级错误" desc="位运算与比较符号可能带来优先级错误，建议添加括号" />
		  <subid name="StlMissingComparison"			value="1" severity="Warning" rule_name="迭代器无结束判断" desc="迭代器发生了自增，偏移运算时，应该先检查是否超出范围" />
		  <subid name="stlSortCheck"					value="1" severity="Warning" rule_name="自定义比较函数缺陷" desc="自定义比较函数应该在参数相等时返回false" />
		  <subid name="InvalidVarArgs"					value="1" severity="Critical" rule_name="格式化字符串参数不匹配" desc="可变参数函数调用时，检查参数是否匹配" />
		  <subid name="SwitchNoBreakUP"					value="1" severity="Warning" rule_name="break缺失" desc="每个带有实际处理的case语句应该对应一个break, 可以通过注释//pass等来标注例外情况" />
		  <subid name="SwitchNoDefault"					value="1" severity="Information" rule_name="default分支缺失" desc="每个switch语句至少需要一个default分支" />
		  <subid name="NoFirstCase"						value="1" severity="Warning" rule_name="case缺失" desc="switch中的代码都应该位于某个case条件中" />
		  <subid name="RecursiveFunc"					value="1" severity="Warning" rule_name="函数递归调用" desc="函数递归, 可能造成栈溢出，或者影响程序性能" />
		  <subid name="CompareDefectInFor"				value="1" severity="Serious" rule_name="for循环比较运算类型错误" desc="For循环比较表达式类型不匹配" />
		  <subid name="UnintentionalOverflow"			value="1" severity="Warning" rule_name="可能的表达式溢出" desc="运算结果可能超出该类型的最大值，建议先做类型提升，在进行运算" />
		  <subid name="duplicateBranch"					value="1" severity="Warning" rule_name="分支内容重复" desc="检查条件的分支内容重复，可能出现笔误，否则应该将分支条件合并" />
		  <subid name="DuplicateExpression"				value="1" severity="Warning" rule_name="判断条件重复" desc="判断条件中表达式重复，可能出现笔误" />
		  <subid name="selfAssignment"					value="1" severity="Warning" rule_name="变量自赋值" desc="变量给自身赋值是无意义的，很可能是变量写错了" />
		  <subid name="duplicateIf"						value="1" severity="Warning" rule_name="if条件重复" desc="if判断中使用了相同的条件, 要么条件是冗余的，要么出现了代码错误" />
		  <subid name="STLFindError"					value="1" severity="Warning" rule_name="std::find函数返回值判定错误" desc="std::find函数返回值需要使用std::string::npos来检查" />
		  <subid name="SignedUnsignedMixed"				value="1" severity="Information" rule_name="有符号无符号变量之间赋值错误" desc="有符号数和无符号数进行赋值，可能产生数值错误" />
		  <subid name="redundantCondition"              value="1" severity="Information" rule_name="重复的条件表达式" desc="条件表达式重复，要么条件是无用的，要么出现了代码错误" />
	  </id>
	  <id name="unsafefunc" rule_name="高危函数错误" value="1">
		  <subid name="unsafeFunctionUsage"				value="0" severity="Warning" rule_name="高危函数" desc="使用高危函数可能造成缓冲区溢出等漏洞，影响程序安全" />
	  </id>
	  <id name="uninit" rule_name="未初始化错误" value="1">
		  <subid name="uninitstring"					value="1" severity="Serious" rule_name="字符串初始化错误" desc="变量未初始化，可能存在分支没有初始化变量"/>
		  <subid name="uninitvar"						value="1" severity="Serious" rule_name="变量未初始化" desc="变量未初始化，或者不是所有的分支都初始化" />
		  <subid name="possibleUninitvar"				value="1" severity="Serious" rule_name="可能的变量未初始化" desc="未初始化变量用作等号右值或者函数参数" />
		  <subid name="uninitPtr"						value="1" severity="Serious" rule_name="指针变量未初始化" desc="未初始化的指针" />
		  <subid name="possibleUninitPtr"			    value="1" severity="Serious" rule_name="可能的指针变量未初始化" desc="未初始化的指针变量用作等号右值或者函数参数" />
		  <subid name="uninitMemberInCtor"				value="1" severity="Serious" rule_name="构造函数使用未初始化成员变量" desc="构造函数使用未初始化成员变量" />
		  <subid name="possibleUninitStruct"     		value="1" severity="Serious" rule_name="可能的未初始化结构体变量" desc="未初始化的结构体变量用作等号右值或者函数参数" />
		  <subid name="UninitStruct"            		value="1" severity="Serious" rule_name="未初始化结构体变量" desc="结构体变量没有初始化，或者部分成员变量未初始化" />
		  <subid name="possibleUninitMemberInCtor" 		value="1" severity="Serious" rule_name="构造函数中成员变量可能未初始化" desc="构造函数中未初始化成员变量用作等号右值或函数参数" />
		  <subid name="uninitMemberVar"				    value="1" severity="Warning" rule_name="构造函数中成员变量未初始化" desc="构造函数中部分成员变量未初始化" />
	  </id>
  </section>
  <section name="IgnoreFileExtension">
	<ext name=".pb.cc" ></ext>
	<ext name=".pb.c" ></ext>
	<ext name=".pb.cpp" ></ext>
	<ext name=".pb.h" ></ext>
	<ext name=".pb.hpp" ></ext>
  </section>
  <section name="FunctionNotReturnNull">
	<function name="malloc" ></function>
	<function name="localtime_r" ></function>
	<function name="localtime" ></function>
	<function name="TMalloc" ></function>
	<function name="create" ></function>
	<function name="getInstance" ></function>
	<function name="instance" ></function>
	<function name="widgetFromBinaryFile" ></function>
	<function name="seekWidgetByName" ></function>
	<function name="widgetFromJsonFile" ></function>
	<function name="getChildByName" ></function>
	<function name="getItem" ></function>
	<function name="FirstChildElement" ></function>
	<function name="newRsb" ></function>
	<function name="getLuaStack" ></function>
	<function name="begin" ></function>
	<function name="Begin" ></function>
	<function name="c_str" ></function>
	<function name="strtod" ></function>
	<function name="strerror" ></function>
	<function name="strtoul" ></function>
	<function name="clearerr" ></function>
	<function name="fflush" ></function>
	<function name="fgetc" ></function>
	<function name="fprintf" ></function>
	<function name="fputc" ></function>
	<function name="fscanf" ></function>
	<function name="ftell" ></function>
	<function name="fwrite" ></function>
	<function name="getc" ></function>
	<function name="getchar" ></function>
	<function name="perror" ></function>
	<function name="printf" ></function>
	<function name="putc" ></function>
	<function name="putchar" ></function>
	<function name="puts" ></function>
	<function name="rewind" ></function>
	<function name="scanf" ></function>
	<function name="setbuf" ></function>
	<function name="setvbuf" ></function>
	<function name="sprintf" ></function>
	<function name="sscanf" ></function>
	<function name="tmpnam" ></function>
	<function name="ungetc" ></function>
	<function name="vprintf" ></function>
	<function name="vfprintf" ></function>
	<function name="vsprintf" ></function>
	<function name="free" ></function>
	<function name="abs" ></function>
	<function name="acos" ></function>
	<function name="asin" ></function>
	<function name="atan" ></function>
	<function name="atan2" ></function>
	<function name="ceil" ></function>
	<function name="cos" ></function>
	<function name="cosh" ></function>
	<function name="div" ></function>
	<function name="exp" ></function>
	<function name="fabs" ></function>
	<function name="floor" ></function>
	<function name="fmod" ></function>
	<function name="frexp" ></function>
	<function name="labs" ></function>
	<function name="ldexp" ></function>
	<function name="ldiv" ></function>
	<function name="log" ></function>
	<function name="log10" ></function>
	<function name="modf" ></function>
	<function name="pow" ></function>
	<function name="sin" ></function>
	<function name="sinh" ></function>
	<function name="sqrt" ></function>
	<function name="tan" ></function>
	<function name="tanh" ></function>
	<function name="asctime" ></function>
	<function name="clock" ></function>
	<function name="ctime" ></function>
	<function name="difftime" ></function>
	<function name="gmtime" ></function>
	<function name="mktime" ></function>
	<function name="strftime" ></function>
	<function name="time" ></function>
	<function name="abort" ></function>
	<function name="assert" ></function>
	<function name="longjmp" ></function>
	<function name="qsort" ></function>
	<function name="rand" ></function>
	<function name="signal" ></function>
	<function name="srand" ></function>
	<function name="va_arg" ></function>
	<function name="feof" ></function>
	<function name="strlen" ></function>
	
	
	<!--function name="MyClass::bar(TTT a, KKK b)"></function-->
  </section>
  <!--section name="PerformanceCfg">
	  <entry name="large_token_count" value="-1"></entry>
	  <entry name="large_header_size" value="-1"></entry>
  </section-->
  <section name="NonReferenceType">
	  <typename name="CommunicatorPtr" ></typename>
	  <typename name="ServantPrx" ></typename>
	  <typename name="AdapterPrx" ></typename>
	  <typename name="ServantPrx" ></typename>
	  <typename name="ServantProxyCallbackPtr" ></typename>
	  <typename name="ThreadContextCallbackPtr" ></typename>
	  <typename name="ServantProxyRouterPtr" ></typename>
	  <typename name="ObjectPrx" ></typename>
	  <typename name="JceCurrentPtr" ></typename>
	  <typename name="StatFPrx" ></typename>
	  <typename name="StatReportPtr" ></typename>
	  <typename name="BasePrx" ></typename>
	  <typename name="FDReactorPtr" ></typename>
	  <typename name="StatReportPtr" ></typename>
	  <typename name="ServantProxyFactoryPtr" ></typename>
	  <typename name="ObjectProxyFactoryPtr" ></typename>
	  <typename name="AsyncProcThreadPtr" ></typename>
	  <typename name="ReqMessagePtr" ></typename>
	  <typename name="TC_AutoPtr" ></typename>
  </section>
  <section name="HeaderExtension">
	<ext name=".hpp" />
	<ext name=".inl" />
	<ext name=".h"   />
	<ext name=".hh"  />
  </section>
  <!--section name="SelfMemMalloc">
	  <function customSelfMalloc="mymalloc" customSelfDelloc="mydelloc" ></function>
	  <function customSelfMalloc="ffopen" customSelfDelloc="ffclose" ></function>
  </section-->
</def>
